<?php
/**
 * OrganizationApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Avalara\\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/*
 * AvaTax Software Development Kit for PHP
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * foundation
 *
 * Platform foundation consists of services on top of which the Avalara Compliance Cloud platform is built. These services are foundational and provide functionality such as common organization, tenant and user management for the rest of the compliance platform.
 *
 * @category   Avalara client libraries
 * @package    Avalara\\SDK\API\\IAMDS
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2022 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @version    2.4.41
 * @link       https://github.com/avadev/AvaTax-REST-V3-PHP-SDK

 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Avalara\SDK\Test\Api;

use \Avalara\SDK\Configuration;
use \Avalara\SDK\ApiException;
use \Avalara\SDK\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrganizationApiTest Class Doc Comment
 *
 * @category Class
 * @package  Avalara\\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrganizationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createOrganizations
     *
     * Create an organization..
     *
     */
    public function testCreateOrganizations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrganization
     *
     * Delete an organization..
     *
     */
    public function testDeleteOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganization
     *
     * Get an organization..
     *
     */
    public function testGetOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOrganizationApps
     *
     * Get all apps within an organization..
     *
     */
    public function testListOrganizationApps()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOrganizationTenants
     *
     * Get all tenants within an organization..
     *
     */
    public function testListOrganizationTenants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOrganizationUsers
     *
     * Get all users within an organization..
     *
     */
    public function testListOrganizationUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listOrganizations
     *
     * List all organizations which the user has access to..
     *
     */
    public function testListOrganizations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchOrganization
     *
     * Update the fields present in the message body on the organization..
     *
     */
    public function testPatchOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for replaceOrganization
     *
     * Update all fields on an organization..
     *
     */
    public function testReplaceOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
