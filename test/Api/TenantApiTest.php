<?php
/**
 * TenantApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Avalara\\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/*
 * AvaTax Software Development Kit for PHP
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * foundation
 *
 * Platform foundation consists of services on top of which the Avalara Compliance Cloud platform is built. These services are foundational and provide functionality such as common organization, tenant and user management for the rest of the compliance platform.
 *
 * @category   Avalara client libraries
 * @package    Avalara\\SDK\API\\IAMDS
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2022 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @version    2.4.41
 * @link       https://github.com/avadev/AvaTax-REST-V3-PHP-SDK

 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Avalara\SDK\Test\Api;

use \Avalara\SDK\Configuration;
use \Avalara\SDK\ApiException;
use \Avalara\SDK\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TenantApiTest Class Doc Comment
 *
 * @category Class
 * @package  Avalara\\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TenantApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addDeviceToTenant
     *
     * Add a device to a tenant..
     *
     */
    public function testAddDeviceToTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addGrantToTenantUser
     *
     * Add a grant to a user within a tenant..
     *
     */
    public function testAddGrantToTenantUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addUserToTenant
     *
     * Add a user to a tenant..
     *
     */
    public function testAddUserToTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTenant
     *
     * Add a tenant to the list of tenants..
     *
     */
    public function testCreateTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteTenant
     *
     * Delete a tenant..
     *
     */
    public function testDeleteTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTenant
     *
     * GET a tenant by ID..
     *
     */
    public function testGetTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenantDevices
     *
     * Retrieve all devices within a tenant..
     *
     */
    public function testListTenantDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenantEntitlements
     *
     * Retrieve all entitlements within a tenant..
     *
     */
    public function testListTenantEntitlements()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenantGroups
     *
     * Retrieve all groups within a tenant..
     *
     */
    public function testListTenantGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenantUserGrants
     *
     * Add a grant to a user within a tenant..
     *
     */
    public function testListTenantUserGrants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenantUserGroups
     *
     * List the groups a user belongs to within a specific tenant..
     *
     */
    public function testListTenantUserGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenantUsers
     *
     * Retrieve all users within a tenant..
     *
     */
    public function testListTenantUsers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listTenants
     *
     * Get a list of all tenants..
     *
     */
    public function testListTenants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchTenant
     *
     * Update specific fields in a tenant..
     *
     */
    public function testPatchTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeDeviceFromTenant
     *
     * Remove a device from a tenant..
     *
     */
    public function testRemoveDeviceFromTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeGrantFromTenantUser
     *
     * Remove a grant from a user within a tenant..
     *
     */
    public function testRemoveGrantFromTenantUser()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeUserFromTenant
     *
     * Remove a user from a tenant..
     *
     */
    public function testRemoveUserFromTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for replaceTenant
     *
     * Update a tenant by ID..
     *
     */
    public function testReplaceTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
