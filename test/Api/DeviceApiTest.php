<?php
/**
 * DeviceApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  Avalara\\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/*
 * AvaTax Software Development Kit for PHP
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * foundation
 *
 * Platform foundation consists of services on top of which the Avalara Compliance Cloud platform is built. These services are foundational and provide functionality such as common organization, tenant and user management for the rest of the compliance platform.
 *
 * @category   Avalara client libraries
 * @package    Avalara\\SDK\API\\IAMDS
 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2022 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @version    2.4.41
 * @link       https://github.com/avadev/AvaTax-REST-V3-PHP-SDK

 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Avalara\SDK\Test\Api;

use \Avalara\SDK\Configuration;
use \Avalara\SDK\ApiException;
use \Avalara\SDK\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DeviceApiTest Class Doc Comment
 *
 * @category Class
 * @package  Avalara\\SDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DeviceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addGrantToDevice
     *
     * Add a grant to a device..
     *
     */
    public function testAddGrantToDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDevice
     *
     * Create a device..
     *
     */
    public function testCreateDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDevice
     *
     * Delete the device..
     *
     */
    public function testDeleteDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDevice
     *
     * Get a device..
     *
     */
    public function testGetDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceGroups
     *
     * List all groups for the device..
     *
     */
    public function testGetDeviceGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDeviceGrants
     *
     * List all grants for the device..
     *
     */
    public function testListDeviceGrants()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDevices
     *
     * List all devices which the user has access to..
     *
     */
    public function testListDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchDevice
     *
     * Update only the fields in the body for the device..
     *
     */
    public function testPatchDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeGrantFromDevice
     *
     * Remove a grant from a device..
     *
     */
    public function testRemoveGrantFromDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for replaceDevice
     *
     * Update all fields on a device..
     *
     */
    public function testReplaceDevice()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
